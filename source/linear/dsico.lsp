;;; not yet tested. CW.

(in-package :q)

(defun dsico-hook (a lda n kpvt rcond z)
  ;(declare (type (simple-array double-float (*)) z))
  ;(declare (type double-float rcond))
  ;(declare (type (simple-array fixnum (*)) kpvt))
  (declare (type fixnum n))
  (declare (type fixnum lda))
  ;(declare (type (simple-array double-float (* *)) a))
  (prog ((t_ 0.0d0) (ek 0.0d0) (bkm1 0.0d0) (bk 0.0d0) (akm1 0.0d0) (ak 0.0d0)
         (ynorm 0.0d0) (s 0.0d0) (anorm 0.0d0) (ks 0) (kps 0) (kp 0) (k 0)
         (jm1 0) (j 0) (info (array 0 :dimensions 'nil)) (i 0) (denom 0.0d0))
         ;(ddot 0.0d0)) ; 31JUL2023
        (declare (type fixnum i))
        (declare (type fixnum j))
        (declare (type fixnum jm1))
        (declare (type fixnum k))
        (declare (type fixnum kp))
        (declare (type fixnum kps))
        (declare (type fixnum ks))
        (declare (type double-float anorm))
        (declare (type double-float s))
        (declare (type double-float ynorm))
        (declare (type double-float ak))
        (declare (type double-float akm1))
        (declare (type double-float bk))
        (declare (type double-float bkm1))
        ;(declare (type double-float ddot))
        (declare (type double-float denom))
        (declare (type double-float ek))
        (declare (type double-float t_))

        (fdo (j 1 (+ j 1))
             ((> j n) nil)
             (tagbody (setf (fref z j) (dasum j (vec-ref a 1 j) 1))
                      (setf jm1 (- j 1))
                      (if (< jm1 1) (go label20))
                      (fdo (i 1 (+ i 1))
                           ((> i jm1) nil)
                           (tagbody (setf (fref z i) (+ (fref z i)
                                                        (dabs (fref a i j))))))
              label20))
        (setf anorm 0.0d0)
        (fdo (j 1 (+ j 1))
             ((> j n) nil)
             (tagbody (setf anorm (dmax1 anorm (fref z j)))))
        (dsifa-hook a lda n kpvt info)
        (setf ek 1.0d0)
        (fdo (j 1 (+ j 1))
             ((> j n) nil)
             (tagbody (setf (fref z j) 0.0)))
        (setf k n)
   label60 (if (= k 0) (go label120))
        (setf ks 1)
        (if (< (fref kpvt k) 0) (setf ks 2))
        (setf kp (iabs (fref kpvt k)))
        (setf kps (- (+ k 1) ks))
        (if (= kp kps) (go label70))
        (setf t_ (fref z kps))
        (setf (fref z kps) (fref z kp))
        (setf (fref z kp) t_)
   label70 (if (/= (fref z k) 0.0) (setf ek (dsign ek (fref z k))))
        (setf (fref z k) (+ (fref z k) ek))
        (daxpy-hook (- k ks) (fref z k) (vec-ref a 1 k) 1 (vec-ref z 1) 1)
        (if (= ks 1) (go label80))
        (if (/= (fref z (- k 1)) 0.0)
            (setf ek (dsign ek (fref z (- k 1)))))
        (setf (fref z (- k 1)) (+ (fref z (- k 1)) ek))
        (daxpy-hook (- k ks) (fref z (- k 1)) (vec-ref a 1 (- k 1)) 1
           (vec-ref z 1) 1)
   label80 (if (= ks 2) (go label100))
        (if (<= (dabs (fref z k)) (dabs (fref a k k))) (go label90))
        (setf s (f2cl/ (dabs (fref a k k)) (dabs (fref z k))))
        (dscal-hook n s z 1)
        (setf ek (* s ek))
   label90 (if (/= (fref a k k) 0.0) (setf (fref z k) (/ (fref z k) (fref a k k))))
        (if (= (fref a k k) 0.0) (setf (fref z k) 1.0))
        (go label110)
   label100 (setf ak (f2cl/ (fref a k k) (fref a (- k 1) k)))
        (setf akm1
              (f2cl/ (fref a (- k 1) (- k 1)) (fref a (- k 1) k)))
        (setf bk (f2cl/ (fref z k) (fref a (- k 1) k)))
        (setf bkm1 (f2cl/ (fref z (- k 1)) (fref a (- k 1) k)))
        (setf denom (- (* ak akm1) 1.0d0))
        (setf (fref z k) (f2cl/ (- (* akm1 bk) bkm1) denom))
        (setf (fref z (- k 1)) (f2cl/ (- (* ak bkm1) bk) denom))
   label110 (setf k (- k ks))
        (go label60)
   label120 (setf s (f2cl/ 1.0d0 (dasum-hook n z 1)))
        (dscal-hook n s z 1)
        (setf k 1)
   label130 (if (> k n) (go label160))
        (setf ks 1)
        (if (< (fref kpvt k) 0) (setf ks 2))
        (if (= k 1) (go label150))
        (setf (fref z k) (+ (fref z k)
                            (ddot (- k 1) (vec-ref a 1 k) 1 (vec-ref z 1) 1)))
        (if (= ks 2)
          (setf (fref z (+ k 1))
                (+ (fref z (+ k 1)) 
                   (ddot-hook (- k 1) (vec-ref a 1 (+ k 1)) 1 (vec-ref z 1) 1))))
        (setf kp (iabs (fref kpvt k)))
        (if (= kp k) (go label140))
        (setf t_ (fref z k))
        (setf (fref z k) (fref z kp))
        (setf (fref z kp) t_)
   label140 label150 (setf k (+ k ks))
        (go label130)
   label160 (setf s (f2cl/ 1.0d0 (dasum-hook n z 1)))
        (dscal-hook n s z 1)
        (setf ynorm 1.0d0)
        (setf k n)
   label170 (if (= k 0) (go label230))
        (setf ks 1)
        (if (< (fref kpvt k) 0) (setf ks 2))
        (if (= k ks) (go label190))
        (setf kp (iabs (fref kpvt k)))
        (setf kps (- (+ k 1) ks))
        (if (= kp kps) (go label180))
        (setf t_ (fref z kps))
        (setf (fref z kps) (fref z kp))
        (setf (fref z kp) t_)
   label180 (daxpy-hook (- k ks) (fref z k) (vec-ref a 1 k) 1 (vec-ref z 1) 1)
        (if (= ks 2)
            (daxpy-hook (- k ks) (fref z (- k 1)) (vec-ref a 1 (- k 1)) 1
               (vec-ref z 1) 1))
   label190 (if (= ks 2) (go label210))
        (if (<= (dabs (fref z k)) (dabs (fref a k k))) (go label200))
        (setf s (f2cl/ (dabs (fref a k k)) (dabs (fref z k))))
        (dscal-hook n s z 1)
        (setf ynorm (* s ynorm))
   label200 (if (/= (fref a k k) 0.0) (setf (fref z k) (/ (fref z k) (fref a k k))))
        (if (= (fref a k k) 0.0) (setf (fref z k) 1.0))
        (go label220)
   label210 (setf ak (f2cl/ (fref a k k) (fref a (- k 1) k)))
        (setf akm1
              (f2cl/ (fref a (- k 1) (- k 1)) (fref a (- k 1) k)))
        (setf bk (f2cl/ (fref z k) (fref a (- k 1) k)))
        (setf bkm1 (f2cl/ (fref z (- k 1)) (fref a (- k 1) k)))
        (setf denom (+ (* ak akm1) (- 1.0d0)))
        (setf (fref z k) (f2cl/ (- (* akm1 bk) bkm1) denom))
        (setf (fref z (- k 1)) (f2cl/ (- (* ak bkm1) bk) denom))
   label220 (setf k (+ k (- ks)))
        (go label170)
   label230 (setf s (f2cl/ 1.0d0 (dasum-hook n z 1)))
        (dscal-hook n s z 1)
        (setf ynorm (* s ynorm))
        (setf k 1)
   label240 (if (> k n) (go label270))
        (setf ks 1)
        (if (< (fref kpvt k) 0) (setf ks 2))
        (if (= k 1) (go label260))
        (setf (fref z k) (+ (fref z k)
                            (ddot (- k 1) (vec-ref a 1 k) 1 (vec-ref z 1) 1)))
        (if (= ks 2)
          (setf (fref z (+ k 1)) 
                (+ (fref z (+ k 1)) 
                   (ddot-hook (- k 1) (vec-ref a 1 (+ k 1)) 1 (vec-ref z 1) 1))))
        (setf kp (iabs (fref kpvt k)))
        (if (= kp k) (go label250))
        (setf t_ (fref z k))
        (setf (fref z k) (fref z kp))
        (setf (fref z kp) t_)
   label250 label260 (setf k (+ k ks))
        (go label240)
   label270 (setf s (f2cl/ 1.0d0 (dasum-hook n z 1)))
        (dscal-hook n s z 1)
        (setf ynorm (* s ynorm))
        (if (/= anorm 0.0d0) (setf (fref rcond 1) (f2cl/ ynorm anorm)))
        (if (= anorm 0.0d0) (setf (fref rcond 1) 0.0))
        (return (values a lda n kpvt rcond z))))

