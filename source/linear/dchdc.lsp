(in-package :q)

(defun dchdc-hook (a lda p work jpvt job info)
  ;;(declare (type fixnum info))
  (declare (type fixnum job))
  ;;(declare (type (simple-array fixnum (*)) jpvt))
  ;;(declare (type (simple-array double-float (*)) work))
  (declare (type fixnum p))
  (declare (type fixnum lda))
  ;;(declare (type (simple-array double-float (* *)) a))
  (prog ((maxl 0) (L 0) (kp1 0) (km1 0) (kb 0) (k 0) (jt 0) (jp 0) (j 0)
         (plp1 0) (pl 0) (pu 0) (temp 0.0d0) (maxdia 0.0d0) (negk nil) (swapk nil))
        (declare (type t swapk))
        (declare (type t negk))
        (declare (type double-float maxdia))
        (declare (type double-float temp))
        (declare (type fixnum pu))
        (declare (type fixnum pl))
        (declare (type fixnum plp1))
        (declare (type fixnum j))
        (declare (type fixnum jp))
        (declare (type fixnum jt))
        (declare (type fixnum k))
        (declare (type fixnum kb))
        (declare (type fixnum km1))
        (declare (type fixnum kp1))
        (declare (type fixnum L))
        (declare (type fixnum maxl))
        (setf pl 1)
        (setf pu 0)
        (setf (fref info 1) p)
        (if (= job 0) (go label160))
        (fdo (k 1 (+ k 1))
             ((> k p) nil)
             (tagbody (setf swapk (> (fref jpvt k) 0))
                      (setf negk (< (fref jpvt k) 0))
                      (setf (fref jpvt k) k)
                      (if negk (setf (fref jpvt k) (- (fref jpvt k))))
                      (if (not swapk) (go label60))
                      (if (= k pl) (go label50))
                      (dswap-hook (- pl 1) (vec-ref a 1 k) 1 (vec-ref a 1 pl) 1)
                      (setf temp (fref a k k))
                      (setf (fref a k k) (fref a pl pl))
                      (setf (fref a pl pl) temp)
                      (setf plp1 (+ pl 1))
                      (if (< p plp1) (go label40))
                      (fdo (j plp1 (+ j 1))
                           ((> j p) nil)
                           (tagbody (if (>= j k) (go label10))
                                    (setf temp (fref a pl j))
                                    (setf (fref a pl j) (fref a j k))
                                    (setf (fref a j k) temp)
                                    (go label20)
                                    label10 (if (= j k) (go label20))
                                    (setf temp (fref a k j))
                                    (setf (fref a k j) (fref a pl j))
                                    (setf (fref a pl j) temp)
                                    label20))
              label40 (setf (fref jpvt k) (fref jpvt pl))
                      (setf (fref jpvt pl) k)
              label50 (setf pl (+ pl 1))
              label60))
        (setf pu p)
        (if (< p pl) (go label150))
        (fdo (kb pl (+ kb 1))
             ((> kb p) nil)
             (tagbody (setf k (+ (- p kb) pl))
                      (if (>= (fref jpvt k) 0) (go label130))
                      (setf (fref jpvt k) (- (fref jpvt k)))
                      (if (= pu k) (go label120))
                      (dswap-hook (- k 1) (vec-ref a 1 k) 1 (vec-ref a 1 pu) 1)
                      (setf temp (fref a k k))
                      (setf (fref a k k) (fref a pu pu))
                      (setf (fref a pu pu) temp)
                      (setf kp1 (+ k 1))
                      (if (< p kp1) (go label110))
                      (fdo (j kp1 (+ j 1))
                           ((> j p) nil)
                           (tagbody (if (>= j pu) (go label80))
                                    (setf temp (fref a k j))
                                    (setf (fref a k j) (fref a j pu))
                                    (setf (fref a j pu) temp)
                                    (go label90)
                            label80 (if (= j pu) (go label90))
                                    (setf temp (fref a k j))
                                    (setf (fref a k j) (fref a pu j))
                                    (setf (fref a pu j) temp)
                            label90))
              label110 (setf jt (fref jpvt k))
                       (setf (fref jpvt k) (fref jpvt pu))
                       (setf (fref jpvt pu) jt)
              label120 (setf pu (- pu 1))
              label130))
        label150
        label160
        (fdo (k 1 (+ k 1))
             ((> k p) nil)
             (tagbody (setf maxdia (fref a k k))
                      (setf kp1 (+ k 1))
                      (setf maxl k)
                      (if (or (< k pl) (>= k pu)) (go label190))
                      (fdo (L kp1 (+ L 1))
                           ((> L pu) nil)
                           (tagbody (if (> (fref a L L) maxdia)
                                      (go label170))
                                    (setf maxdia (fref a L L))
                                    (setf maxl L)
                                    label170))
                      label190 (if (> maxdia 0.0) (go label200))
                      (setf (fref info 1) (- k 1))
                      (go label280)
                      label200 (if (= k maxl) (go label210))
                      (setf km1 (- k 1))
                      (dswap-hook km1 (vec-ref a 1 k) 1 (vec-ref a 1 maxl) 1)
                      (setf (fref a maxl maxl) (fref a k k))
                      (setf (fref a k k) maxdia)
                      (setf jp (fref jpvt maxl))
                      (setf (fref jpvt maxl) (fref jpvt k))
                      (setf (fref jpvt k) jp)
                      label210 (setf (fref work k) (dsqrt (fref a k k)))
                      (setf (fref a k k) (fref work k))
                      (if (< p kp1) (go label260))
                      (fdo (j kp1 (+ j 1))
                           ((> j p) nil)
                           (tagbody (if (= k maxl) (go label240))
                                    (if (>= j maxl) (go label220))
                                    (setf temp (fref a k j))
                                    (setf (fref a k j) (fref a j maxl))
                                    (setf (fref a j maxl) temp)
                                    (go label230)
                                    label220 (if (= j maxl) (go label230))
                                    (setf temp (fref a k j))
                                    (setf (fref a k j) (fref a maxl j))
                                    (setf (fref a maxl j) temp)
                                    label230 label240 (setf (fref a k j)
                                                            (f2cl/ (fref a k j)
                                                                   (fref work k)))
                                    (setf (fref work j) (fref a k j))
                                    (setf temp (- (fref a k j)))
                                    (daxpy-hook (- j k) temp
                                                (vec-ref work kp1) 1
                                                (vec-ref a kp1 j) 1)))
                      label260))
   label280 (return (values a lda p work jpvt job info))))

