;;; not yet tested. CW.

(in-package :q)

(defun dtrdi-hook (t_ ldt n det job info)
  ;(declare (type fixnum info))
  (declare (type fixnum job))
  ;(declare (type (simple-array double-float (*)) det))
  (declare (type fixnum n))
  (declare (type fixnum ldt))
  ;(declare (type (simple-array double-float (* *)) t_))
  (prog ((temp 0.0d0) (kp1 0) (km1 0) (kb 0) (k 0) (j 0) (i 0))
        (declare (type fixnum i))
        (declare (type fixnum j))
        (declare (type fixnum k))
        (declare (type fixnum kb))
        (declare (type fixnum km1))
        (declare (type fixnum kp1))
        (declare (type double-float temp))
        (if (= (f2cl/ job 100) 0) (go label70))
        (setf (fref det 1) 1.0)
        (setf (fref det 2) 0.0)
        (fdo (i 1 (+ i 1))
             ((> i n) nil)
             (tagbody (setf (fref det 1) (* (fref t i i) (fref det 1)))
                      (if (= (fref det 1) 0.0) (go label60))
              label10 (if (>= (dabs (fref det 1)) 1.0) (go label20))
                      (setf (fref det 1) (* 10.0 (fref det 1)))
                      (setf (fref det 2) (- (fref det 2) 1.0))
                      (go label10)
              label20 label30 (if (< (dabs (fref det 1)) 10.0) (go label40))
                      (setf (fref det 1) (f2cl/ (fref det 1) 10.0))
                      (setf (fref det 2) (+ (fref det 2) 1.0))
                      (go label30)
              label40))
   label60
   label70 (if (= (mod (f2cl/ job 10) 10) 0) (go label170))
        (if (= (mod job 10) 0) (go label120))
        (fdo (k 1 (+ k 1))
             ((> k n) nil)
             (tagbody (setf (fref info 1) k)
                      (if (= (fref t_ k k) 0.0) (go label110))
                      (setf (fref t k k) (f2cl/ 1.0 (fref t k k)))
                      (setf temp (- (fref t_ k k)))
                      (dscal-hook (- k 1) temp (vec-ref t_ 1 k) 1)
                      (setf kp1 (+ k 1))
                      (if (< n kp1) (go label90))
                      (fdo (j kp1 (+ j 1))
                           ((> j n) nil)
                           (tagbody (setf temp (fref t_ k j))
                                    (setf (fref t k j) 0.0)
                                    (daxpy-hook k temp (vec-ref t_ 1 k) 1 (vec-ref t_ 1 j) 1)))
              label90))
        (setf (fref info 1) 0)
   label110 (go label160)
   label120 (fdo (kb 1 (+ kb 1))
                 ((> kb n) nil)
                 (tagbody (setf k (+ n 1 (- kb)))
                          (setf (fref info 1) k)
                          (if (= (fref t_ k k) 0.0) (go label180))
                          (setf (fref t k k) (f2cl/ 1.0 (fref t k k)))
                          (setf temp (- (fref t_ k k)))
                          (if (/= k n)
                              (dscal-hook (- n k) temp (vec-ref t_ (+ k 1) k) 1))
                          (setf km1 (+ k (- 1)))
                          (if (< km1 1) (go label140))
                          (fdo (j 1 (+ j 1))
                               ((> j km1) nil)
                               (tagbody (setf temp (fref t_ k j))
                                        (setf (fref t k j) 0.0)
                                        (daxpy-hook (+ n (- k) 1) temp
                                                    (vec-ref t_ k k) 1
                                                    (vec-ref t_ k j) 1)))
                  label140))
        (setf (fref info 1) 0)
   label160 label170 label180 (return (values t_ ldt n det job info))))

