(in-package :q)

(defvar *tag-hack*) ;; prevents ACL compiler overflow! gwb
                    ;; used to enclose tagbody forms below. gwb

(defun dqrsl-hook (x ldx n k qraux y qy qty b rsd xb job info)
  ;;(declare (type fixnum info))
  (declare (type fixnum job))
  ;;(declare (type (simple-array double-float (*)) xb))
  ;;(declare (type (simple-array double-float (*)) rsd))
  ;;(declare (type (simple-array double-float (*)) b))
  ;;(declare (type (simple-array double-float (*)) qty))
  ;;(declare (type (simple-array double-float (*)) qy))
  ;;(declare (type (simple-array double-float (*)) y))
  ;;(declare (type (simple-array double-float (*)) qraux))
  (declare (type fixnum k))
  (declare (type fixnum n))
  (declare (type fixnum ldx))
  ;;(declare (type (simple-array double-float (* *)) x))
  (prog ((t_ 0.0d0) (kp1 0) (ju 0) (jj 0) (j 0) (i 0) (temp 0.0d0)
         (cxb nil) (cr nil) (cqty nil) (cqy nil) (cb nil))
         ;(ddot 0.0d0)) ; 31JUL2023
        (declare (type t cb))
        (declare (type t cqy))
        (declare (type t cqty))
        (declare (type t cr))
        (declare (type t cxb))
        ;(declare (type double-float ddot))
        (declare (type double-float t_))
        (declare (type double-float temp))
        (declare (type fixnum i))
        (declare (type fixnum j))
        (declare (type fixnum jj))
        (declare (type fixnum ju))
        (declare (type fixnum kp1))

        (setf (fref info 1) 0)
        (setf cqy (/= (f2cl/ job 10000) 0))
        (setf cqty (/= (mod job 10000) 0))
        (setf cb (/= (f2cl/ (mod job 1000) 100) 0))
        (setf cr (/= (f2cl/ (mod job 100) 10) 0))
        (setf cxb (/= (mod job 10) 0))
        (setf ju (min0 k (+ n (- 1))))
        (if (/= ju 0) (go label40))
        (if cqy (setf (fref qy 1) (fref y 1)))
        (if cqty (setf (fref qty 1) (fref y 1)))
        (if cxb (setf (fref xb 1) (fref y 1)))
        (if (not cb) (go label30))
        (if (/= (fref x 1 1) 0.0) (go label10))
        (setf (fref info 1) 1)
        (go label20)
   label10 (setf (fref b 1) (f2cl/ (fref y 1) (fref x 1 1)))
   label20 label30 (if cr (setf (fref rsd 1) 0.0))
        (go label250)
   label40 (if cqy
               (dcopy-hook n y 1 qy 1))
        (if cqty
            (dcopy-hook n y 1 qty 1))
        (if (not cqy) (go label70))
        (fdo (jj 1 (+ jj 1))
             ((> jj ju) nil)
            (let (*tag-hack*)
             (tagbody (setf j (+ (+ ju (- jj)) 1))
                      (if (= (fref qraux j) 0.0) (go label50))
                      (setf temp (fref x j j))
                      (setf (fref x j j) (fref qraux j))
                      (setf t_ (f2cl/ (- (ddot-hook (+ (- n j) 1) (vec-ref x j j) 1
                                                    (vec-ref qy j) 1))
                                      (fref x j j)))
                      (daxpy-hook (+ (- n j) 1) t_ (vec-ref x j j) 1 (vec-ref qy j) 1)
                      (setf (fref x j j) temp)
              label50))
             )
   label70 (if (not cqty) (go label100))
        (fdo (j 1 (+ j 1))
             ((> j ju) nil)
             (let (*tag-hack*)
             (tagbody (if (= (fref qraux j) 0.0) (go label80))
                      (setf temp (fref x j j))
                      (setf (fref x j j) (fref qraux j))
                      (setf t_ (f2cl/ (- (ddot-hook (+ (- n j) 1) (vec-ref x j j) 1
                                                    (vec-ref qty j) 1))
                                      (fref x j j)))
                      (daxpy-hook (+ (- n j) 1) t_ (vec-ref x j j) 1 (vec-ref qty j) 1)
                      (setf (fref x j j) temp)
              label80))
           )
   label100 (if cb
                (dcopy-hook k qty 1 b 1))
        (setf kp1 (+ k 1))
        (if cxb
            (dcopy-hook k qty 1 xb 1))
        (if (and cr (< k n))
            (dcopy-hook (- n k) (vec-ref qty kp1) 1 (vec-ref rsd kp1) 1))
        (if (or (not cxb) (> kp1 n)) (go label120))
        (fdo (i kp1 (+ i 1))
             ((> i n) nil)
             (let (*tag-hack*)
             (tagbody (setf (fref xb i) 0.0)))
         )
   label120 (if (not cr) (go label140))
        (fdo (i 1 (+ i 1))
             ((> i k) nil)
             (let (*tag-hack*)
             (tagbody (setf (fref rsd i) 0.0)))
        )
   label140 (if (not cb) (go label190))
        (fdo (jj 1 (+ jj 1))
             ((> jj k) nil)
             (let (*tag-hack*)
             (tagbody (setf j (+ (+ k (- jj)) 1))
                      (if (/= (fref x j j) 0.0) (go label150))
                      (setf (fref info 1) j)
                      (go label180)
              label150 (setf (fref b j) (f2cl/ (fref b j) (fref x j j)))
                      (if (= j 1) (go label160))
                      (setf t_ (- (fref b j)))
                      (daxpy-hook (- j 1) t_ (vec-ref x 1 j) 1 b 1)
              label160))
         )
   label180 label190 (if (and (not cr) (not cxb)) (go label240))
        (fdo (jj 1 (+ jj 1))
             ((> jj ju) nil)
             (let (*tag-hack*)
             (tagbody (setf j (+ (+ ju (- jj)) 1))
                      (if (= (fref qraux j) 0.0) (go label220))
                      (setf temp (fref x j j))
                      (setf (fref x j j) (fref qraux j))
                      (if (not cr) (go label200))
                      (setf t_
                            (f2cl/ (* -1
                                      (ddot-hook (+ (+ n (- j)) 1) (vec-ref x j j) 1
                                       (vec-ref rsd j) 1))
                                   (fref x j j)))
                      (daxpy-hook (+ (+ n (- j)) 1) t_ (vec-ref x j j) 1 (vec-ref rsd j)
                         1)
              label200 (if (not cxb) (go label210))
                      (setf t_
                            (f2cl/ (* -1
                                      (ddot-hook (+ (+ n (- j)) 1) (vec-ref x j j) 1
                                       (vec-ref xb j) 1))
                                   (fref x j j)))
                      (daxpy-hook (+ (+ n (- j)) 1) t_ (vec-ref x j j) 1 (vec-ref xb j)
                         1)
              label210 (setf (fref x j j) temp)
              label220))
           )
   label240 label250 (return (values x ldx n k qraux y qy qty b rsd xb job info))))

